find():

The find() method returns the value of the first element that passes a test.
The find() method executes a function for each array element.
The find() method returns undefined if no elements are found.
The find() method does not execute the function for empty elements.
The find() method does not change the original array.

Syntax
array.find(function(currentValue, index, arr),thisValue)

Return Value
The value of the first element that pass the test.
Otherwise it returns undefined.


Example 
const ages = [3, 10, 18, 20];
function checkAge(age) {
  return age > 18;
}
function myFunction() {
  document.getElementById("demo").innerHTML = ages.find(checkAge);
}



findIndex():

The findIndex() method executes a function for each array element.

The findIndex() method returns the index (position) of the first element that passes a test.

The findIndex() method returns -1 if no match is found.

The findIndex() method does not execute the function for empty array elements.

The findIndex() method does not change the original array.

Syntax
array.findIndex(function(currentValue, index, arr), thisValue)

Return Value
The index of the first element that passes the test.
Otherwise -1.

Example 
const ages = [3, 10, 18, 20];

ages.findIndex(checkAge);

function checkAge(age) {
  return age > 18;
}



filter()

The filter() method creates a new array filled with elements that pass a test provided by a function.

The filter() method does not execute the function for empty elements.

The filter() method does not change the original array.

Syntax
array.filter(function(currentValue, index, arr), thisValue)

Return Value
An array of elements that pass the test.
An empty array if no elements pass the test.

Eaxmple 
const ages = [32, 33, 16, 40];
const result = ages.filter(checkAdult);

function checkAdult(age) {
  return age >= 18;
}